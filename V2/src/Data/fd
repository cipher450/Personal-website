/*! For license information please see tsparticles.preset.triangles.min.js.LICENSE.txt */
!(function (e, t) {
  if ("object" == typeof exports && "object" == typeof module)
    module.exports = t(
      require("tsparticles-move-base"),
      require("tsparticles-shape-circle"),
      require("tsparticles-updater-color"),
      require("tsparticles-updater-opacity"),
      require("tsparticles-updater-out-modes"),
      require("tsparticles-interaction-particles-links"),
      require("tsparticles-updater-size")
    );
  else if ("function" == typeof define && define.amd)
    define([
      "tsparticles-move-base",
      "tsparticles-shape-circle",
      "tsparticles-updater-color",
      "tsparticles-updater-opacity",
      "tsparticles-updater-out-modes",
      "tsparticles-interaction-particles-links",
      "tsparticles-updater-size",
    ], t);
  else {
    var r =
      "object" == typeof exports
        ? t(
            require("tsparticles-move-base"),
            require("tsparticles-shape-circle"),
            require("tsparticles-updater-color"),
            require("tsparticles-updater-opacity"),
            require("tsparticles-updater-out-modes"),
            require("tsparticles-interaction-particles-links"),
            require("tsparticles-updater-size")
          )
        : t(
            e.window,
            e.window,
            e.window,
            e.window,
            e.window,
            e.window,
            e.window
          );
    for (var a in r) ("object" == typeof exports ? exports : e)[a] = r[a];
  }
})(this, (e, t, r, a, i, s, o) =>
  (() => {
    "use strict";
    var p = {
        39: (e) => {
          e.exports = s;
        },
        565: (t) => {
          t.exports = e;
        },
        851: (e) => {
          e.exports = t;
        },
        613: (e) => {
          e.exports = r;
        },
        515: (e) => {
          e.exports = a;
        },
        509: (e) => {
          e.exports = i;
        },
        694: (e) => {
          e.exports = o;
        },
      },
      l = {};
    function c(e) {
      var t = l[e];
      if (void 0 !== t) return t.exports;
      var r = (l[e] = { exports: {} });
      return p[e](r, r.exports, c), r.exports;
    }
    (c.d = (e, t) => {
      for (var r in t)
        c.o(t, r) &&
          !c.o(e, r) &&
          Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
      (c.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
      (c.r = (e) => {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 });
      });
    var d = {};
    return (
      (() => {
        c.r(d), c.d(d, { loadTrianglesPreset: () => l });
        var e = c(565),
          t = c(851),
          r = c(613),
          a = c(515),
          i = c(509),
          s = c(39),
          o = c(694);
        const p = {
          background: { color: "#000000" },
          particles: {
            number: { value: 100 },
            links: {
              distance: 125,
              enable: !0,
              triangles: { enable: !0, opacity: 0.1 },
            },
            move: { enable: !0, speed: 5 },
            size: { value: 1 },
            shape: { type: "circle" },
          },
        };
        async function l(l, c = !0) {
          await (0, e.loadBaseMover)(l, !1),
            await (0, t.loadCircleShape)(l, !1),
            await (0, r.loadColorUpdater)(l, !1),
            await (0, s.loadParticlesLinksInteraction)(l, !1),
            await (0, i.loadOutModesUpdater)(l, !1),
            await (0, a.loadOpacityUpdater)(l, !1),
            await (0, o.loadSizeUpdater)(l, !1),
            await l.addPreset("triangles", p, c);
        }
      })(),
      d
    );
  })()
);
